{
	"About": {
		"Name": "RangeHandler object",
		"Author": "Darkwire Software",
		"Copyright": "Copyright \u00A9 2019 by Darkwire Software",
		"Comment": "Sorts a range of values into a delimited string and vice versa.",
		"Help": "Help/RangeHandler.chm",
		"Identifier": "RGHD",
		"URL": "https://dark-wire.com/"
	},
	"ActionMenu": [
		[ 0, "Iterate all values in string" ],
		[ 1, "Iterate all values in ranges" ],
		"Separator"
	],
	"ConditionMenu": [
		 [ 0, "On value iterated" ],
		 "Separator",
		 [ 1, "Darkwire Software", true ]
	],
	"ExpressionMenu": [
		[ 0, "Convert string into ranges"],
		[ 1, "Convert ranges into string"],
		[ 2, "Get current iterated value"]
	],
	"Actions": [
		// ID = 0
		{
			"Title": "Iterate all values in string (%0), interpret with delimiter (%1)"
			"Parameters": [
				[ "String", "Input string:" ],
				[ "String", "Input delimiter (can be several delimiters):" ]
			]
		},
		// ID = 1
		{
			"Title": "Iterate all values in ranges (%0), interpret with single delimiter (%1) and multiple delimiter (%2)",
			"Parameters": [
				[ "String", "Input string:" ],
				// 1,2,3,4-10,11 -> single is , multiple is -
				[ "String", "Input singular delimiter(s):", "," ],
				[ "String", "Input multiple delimiter(s):", "-" ]
			]
		}
	],
	"Conditions": [
		// ID = 0
		{
			"Title": "%o : On value iterated",
			"Triggered": true
		}
	],
	"Expressions": [
		// ID = 0
		{
			"Title": "StringToRange$(",
			"Returns": "String",
			"Parameters": [
				[ "String", "Input string:" ],
				[ "String", "Input delimiter (can be multiple delimiters):" ],
				[ "String", "Output for singular-numbers (e.g. the \",\" in 1, 5, 8-10):" ],
				[ "String", "Output for multiple-numbers (e.g. the \"-\" in 1, 5, 8-10):" ]
			]
		},
		// ID = 1
		{
			"Title": "RangeToString$(",
			"Returns": "Text",
			"Parameters": [
				[ "String", "Input string:" ],
				[ "String", "Input for singular-numbers (e.g. the \",\" in 1, 5, 8-10):" ],
				[ "String", "Input for multiple-numbers (e.g. the \"-\" in 1, 5, 8-10):" ],
				[ "String", "Output delimiter:" ]
			]
		},
		// ID = 2
		{	
			"Title": "CurrentValue(",
			"Returns": "Integer"
		}
	]
}
